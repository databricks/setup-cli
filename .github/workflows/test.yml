name: test

# TODO: Add assertion on installation path for the default routes
on:
  pull_request:
    types: [opened, synchronize]

  push:
    branches: [main]

  workflow_dispatch:

jobs:
  action_with_defaults:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: ./setup-cli

      - uses: ./setup-cli

      - run: databricks version
        shell: bash

      - run: ./setup-cli/assert/version.sh $(cat ./setup-cli/VERSION)
        shell: bash

  action_with_version:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: ./setup-cli

      - uses: ./setup-cli
        with:
          version: 0.200.0

      - run: databricks version
        shell: bash

      - run: ./setup-cli/assert/version.sh 0.200.0
        shell: bash

  install:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: ./setup-cli

      - run: env
        shell: bash

      - run: ./setup-cli/install.sh
        shell: bash

      - run: databricks version
        shell: bash

      - run: ./setup-cli/assert/version.sh $(cat ./setup-cli/VERSION)
        shell: bash

  install-dbr:
    # All DBR images are built on top of Ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: ./setup-cli

      - run: ./setup-cli/install.sh
        shell: bash
        env:
          DATABRICKS_RUNTIME_VERSION: value-does-not-matter

      # Append ~/bin to the PATH. This helps with the assertions in the next steps.
      - run: echo "export PATH=\$PATH:\$HOME/bin" >> $GITHUB_ENV

      - run: databricks version
        shell: bash

      - run: ./setup-cli/assert/version.sh $(cat ./setup-cli/VERSION)
        shell: bash

      - run: ./setup-cli/assert/path.sh ~/databricks
        shell: bash

  curl:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: ./setup-cli

      - run: curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/${{ github.sha }}/install.sh | sh
        shell: bash

      - run: databricks version
        shell: bash

      - run: ./setup-cli/assert/version.sh $(cat ./setup-cli/VERSION)
        shell: bash


  curl-dbr:
    # All DBR images are built on top of Ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: ./setup-cli

      - run: curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/${{ github.sha }}/install.sh | sh
        shell: bash
        env:
          DATABRICKS_RUNTIME_VERSION: value-does-not-matter

      # Append ~/bin to the PATH. This helps with the assertions in the next steps.
      - run: echo "export PATH=\$PATH:\$HOME/bin" >> $GITHUB_ENV

      - run: databricks version
        shell: bash

      - run: ./setup-cli/assert/version.sh $(cat ./setup-cli/VERSION)
        shell: bash

      - run: ./setup-cli/assert/path.sh ~/databricks
        shell: bash
